<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:ctx="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd                        
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop.xsd" >
    
    <ctx:annotation-config />
    <ctx:component-scan base-package="bitcamp.java106.step13.ex4" />
    
    <!-- 필터 객체 생성 -->
    <bean id="myAdvice" class="bitcamp.java106.step13.ex4.MyAdvice" />
    
    <aop:config>
        <aop:aspect id="aspect1" ref="myAdvice">
            <!-- 필터에서 호출하려는 메소드의 파라미터값 받기 -->
            <aop:before pointcut="execution(* bitcamp.java106.step13.ex4.X.*(..)) and args(a,b)" method="doBefore" />
            <aop:after-returning pointcut="execution(* bitcamp.java106.step13.ex4.X.*(..))" method="doAfterReturning" returning="returnValue" />
            <aop:after-throwing pointcut="execution(* bitcamp.java106.step13.ex4.X.*(..))" method="doAfterThrowing" throwing="error" />
       </aop:aspect>
    </aop:config>
 </beans>
